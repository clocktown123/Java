
/**
 * Write a description of class AreaOfCircle here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */

import java.util.Scanner;

class SphereVolume{
    private double sphereRadius;
    private final double fourThirds = 4/3.0;
    private double volume;
    private String choice;
    
    public void pickShape(String choice){
        this.choice = choice;
    }
    
    public void setVariable(double sphereRadius){
        this.sphereRadius = sphereRadius;
    }
    
    public double calculateVolume(){
        return this.fourThirds*Math.PI*Math.pow(this.sphereRadius, 3);
    }
}

class CubeVolume{
    private double sideLength; // the length of one side for the square (all sides should be equal)
    private double volume;
    private String choice;
    
    public void pickShape(String choice){
        this.choice = choice;
    }
    
    public void setVariable(double sideLength){
        this.sideLength = sideLength;
    }
    
    public double calculateVolume(){
        return this.volume = Math.pow(this.sideLength, 3);
    }
    
}

class ConeVolume{
    private double coneRadius; // base of the triangle
    private double coneHeight; // height of the triangle
    private double volume;
    private String choice;
    
    public void pickShape(String choice){
        this.choice = choice;
    }
    
    public void setVariable(double coneRadius, double coneHeight){
        this.coneRadius = coneRadius;
        this.coneHeight = coneHeight;
    }
    
    public double calculateVolume(){
        return this.volume = Math.PI * Math.pow(this.coneRadius, 2) * (this.coneHeight/3.0);
    }
    
}

class RectPrismVolume{
    private double rectangleLength; // base of the rectangle
    private double rectangleWidth;
    private double rectangleHeight; // height of the rectangle
    private double volume;
    private String choice;
    
    public void pickShape(String choice){
        this.choice = choice;
    }
    
    public void setVariable(double rectangleLength, double rectangleWidth, double rectangleHeight){
        this.rectangleLength = rectangleLength;
        this.rectangleWidth = rectangleWidth;
        this.rectangleHeight = rectangleHeight;
    }
    
    public double calculateVolume(){
        return this.volume = this.rectangleLength * this.rectangleWidth * this.rectangleHeight;
    }
    
}

public class VolumeOfShapesOOP
{
    public static void main(String[] args)
    {
        Scanner stdIn = new Scanner(System.in);
        SphereVolume sphere = new SphereVolume();
        CubeVolume cube = new CubeVolume();
        ConeVolume cone = new ConeVolume();
        RectPrismVolume rect = new RectPrismVolume();
        String quit = "";
        
        while (!quit.equalsIgnoreCase("q")){
            
            System.out.printf("Please choose which shape to calculate the area for: sphere, cube, cone, rectangular prism\n");
            String choice = stdIn.nextLine();
            
            //sphere variables
            double sphereRadius;
            
            //cube variables
            double sideLength;
            
            //cone variables
            double coneRadius;
            double coneHeight;
            
            //rectangular prism variables
            double rectangleLength;
            double rectangleWidth;
            double rectangleHeight;
            
            
            sphere.pickShape(choice);
            cube.pickShape(choice);
            cone.pickShape(choice);
            rect.pickShape(choice);
                        
            //end of variable section ----------------------
            if (choice.equalsIgnoreCase("sphere")){
                System.out.printf("what is the radius of the sphere?\n");
                sphereRadius = stdIn.nextDouble();
                sphere.setVariable(sphereRadius);
                System.out.printf("The shape chosen was a %s with a radius of %s \nwhich gives a volume of %.2f\n", choice, sphereRadius, sphere.calculateVolume());
            }
            else if (choice.equalsIgnoreCase("cube")){
                System.out.printf("what is the length for one side of the cube? (all sides should be equal)\n");
                sideLength = stdIn.nextDouble();
                cube.setVariable(sideLength);
                System.out.printf("The shape chosen was a %s\nwith a side length of %s\nwhich gives an volume of %.2f\n", choice, sideLength, cube.calculateVolume());
            }
            else if (choice.equalsIgnoreCase("cone")){
                System.out.printf("what is the radius of the cone?\n");
                coneRadius = stdIn.nextDouble();
                System.out.printf("what is the height of the cone?\n");
                coneHeight = stdIn.nextDouble();
                cone.setVariable(coneRadius, coneHeight);
                System.out.printf("The shape chosen was a %s with a radius of %s\nand a height of %s which gives a volume of %.2f\n", choice, coneRadius, coneHeight, cone.calculateVolume());
            }
            else if (choice.equalsIgnoreCase("rectangular prism")){
                System.out.printf("what is the length of the rectangular prism?\n");
                rectangleLength = stdIn.nextDouble();
                System.out.printf("what is the width of the rectangular prism?\n");
                rectangleWidth = stdIn.nextDouble();
                System.out.printf("what is the height of the rectangular prism?\n");
                rectangleHeight = stdIn.nextDouble();
                rect.setVariable(rectangleLength, rectangleWidth, rectangleHeight);
                System.out.printf("The shape chosen was a %s\nwith a length of %s a width of %s\nand a height of %s\nwhich gives a volume of %.2f\n", choice, rectangleLength, rectangleWidth, rectangleHeight, rect.calculateVolume());
            }
            else{
                System.out.printf("That option is not among the list of shapes provided, please choose again\n");
            }
           
            stdIn.nextLine();
            
            System.out.printf("Press q to quit or any other key to continue.\n");
            quit = stdIn.nextLine();
        }
        stdIn.close();
    }
}
